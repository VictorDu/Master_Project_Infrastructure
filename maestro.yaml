__maestro:
  schema: 2
{%- set name = 'Master_Project_Infarstructure' %}
name: {{ name }}
{%- set share_host = '/root/docker-share' %}
{%- set share_docker = '/var/docker-share' %}
ships:
  dc-1: {ip: 192.168.0.106, docker_port: 2375 , timeout: 15}
  dc-2: {ip: 192.168.0.105, docker_port: 2375 , timeout: 15} 
  dc-3: {ip: 192.168.0.107, docker_port: 2375 , timeout: 15}
services:
  {%- with servers = [('dc-1', 1), ('dc-2', 2), ('dc-3', 3)] %}
  zookeeper:
    image: 20-maestro-zookeeper:latest
    {%- set zookeeper_share_host = share_host + '/zookeeper' %}
    {%- set zookeeper_share_docker = share_host + '/zookeeper' %}
    env:
      {%- set serverids = [] %}
      {%- for ship, zookeeper_id in servers %}
        {%- set DO = serverids.append('{}:{}'.format("zookeeper-"+ship, zookeeper_id)) %}
      {%- endfor %}
      {%- if serverids|length > 1 %}
      ZOOKEEPER_SERVER_IDS: {{ serverids|join(',') }}
      {%- endif %}
      ZOOKEEPER_TICKTIME: 2000
      ZOOKEEPER_CLIENTPORT: 2181
    instances:
    {%- for ship, zookeeper_id in servers %}
      zookeeper-{{ ship }}:
        ship: {{ ship }}
        ports: {client: 2181, peer: 2888, leader_election: 3888}
        volumes:
          {{ zookeeper_share_host }}/v{{ zookeeper_id }}: {{ zookeeper_share_docker }}/v{{ zookeeper_id }}
          {{ zookeeper_share_host }}/log{{ zookeeper_id }}: /var/log/zookeeper
        env:
          ZOOKEEPER_DATADIR: {{ zookeeper_share_docker }}/v{{ zookeeper_id }}
    {%- endfor %}
  {%- endwith %}  

  {%- with servers = [('dc-1', 1), ('dc-2', 2), ('dc-3', 3)] %}
  {%- set kafka_share_host = share_host + '/kafka' %}
  {%- set kafka_share_docker = share_host + '/kafka' %}
  kafka:
    image: 20-maestro-kafka:latest
    requires: [ zookeeper ]
    env:
      NUM_PARTITIONS: 3
    instances:
    {%- for ship, broker in servers %}
      kafka-{{ ship }}:
        ship: {{ ship }}
        ports: {broker: 9092}
        volumes:
          {{ kafka_share_host }}/broker{{ broker }}: {{ kafka_share_docker }}
        env:
          BROKER_ID: {{ broker }}
    {%- endfor %}
  {%- endwith %}  
  
  {%- with servers = ['dc-2', 'dc-3'] %}
  hadoop-slave:
    image: 20-maestro-hadoop:latest
    requires: [ kafka ]
    instances:
    {%- for ship in servers %}
      slave-{{ ship }}:
        ship: {{ ship }}
        ports: {client: 8088, peer: 9000, ssh: 2122, secondary: 50090, namenode: 50070, jT: 5431, sa: 8035, rt: 8025, rm: 8050, abc: 8031, task: 50010, nodeHttp: 8042, yarn: 40000, a: 10020, b: 19888, c: 10022, d: 8020, e: 50075, f: 50020, wa: 50100, wb: 50101, wc: 50102, we : 50104, wf: 50105, wg: 50106, wh: 50107, wi: 50108, wj: 50109, wk: 50110, spark: 8080, spark2: 7077, spark3: 6066}
    {%- endfor %}
  {%- endwith %}

  spark-master:
    image: 40-maestro-spark-master:latest
    requires: [ hadoop-slave ]
    instances:
      Master:
        ship: dc-1
        ports: {client: 8088, peer: 9000, ssh: 2122, secondary: 50090, namenode: 50070, jT: 5431, sa: 8035, rt: 8025, rm: 8050, abc: 8031, task: 50010, nodeHttp: 8042, yarn: 40000, a: 10020, b: 19888, c: 10022, d: 8020, e: 50075, f: 50020, wa: 50100, wb: 50101, wc: 50102, we : 50104, wf: 50105, wg: 50106, wh: 50107, wi: 50108, wj: 50109, wk: 50110, spark: 8080, spark2: 7077, spark3: 6066}
